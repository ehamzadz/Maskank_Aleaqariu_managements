unit uLogin;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.Objects, FMX.Ani, FMX.Edit, FMX.Controls.Presentation, FMX.TabControl;

type
  Tfrm_login = class(TForm)
    Brush1: TBrushObject;
    Gradient_Dark_Blue: TBrushObject;
    green: TBrushObject;
    pink: TBrushObject;
    StyleBook1: TStyleBook;
    TabControl1: TTabControl;
    tab_login: TTabItem;
    tab_register: TTabItem;
    Rectangle5: TRectangle;
    Rectangle9: TRectangle;
    Rectangle10: TRectangle;
    btn_register: TRectangle;
    Text9: TText;
    ColorAnimation4: TColorAnimation;
    Rectangle12: TRectangle;
    edit_fullName: TEdit;
    Rectangle13: TRectangle;
    edit_pass2: TEdit;
    PasswordEditButton2: TPasswordEditButton;
    Text10: TText;
    Text11: TText;
    Text12: TText;
    text_err_msg2: TText;
    Text18: TText;
    Rectangle16: TRectangle;
    edit_user2: TEdit;
    Text19: TText;
    Rectangle17: TRectangle;
    edit_pass22: TEdit;
    PasswordEditButton3: TPasswordEditButton;
    FloatAnimation3: TFloatAnimation;
    Rectangle14: TRectangle;
    Rectangle15: TRectangle;
    btn_go_to_login_form: TRectangle;
    Text14: TText;
    ColorAnimation3: TColorAnimation;
    Text15: TText;
    Text16: TText;
    Text17: TText;
    Line2: TLine;
    FloatAnimation4: TFloatAnimation;
    Rectangle19: TRectangle;
    Text20: TText;
    ColorAnimation6: TColorAnimation;
    tab_load: TTabItem;
    Timer1: TTimer;
    Rectangle11: TRectangle;
    Rectangle18: TRectangle;
    text_welcome: TText;
    Image1: TImage;
    FloatAnimation5: TFloatAnimation;
    Rectangle20: TRectangle;
    Rectangle21: TRectangle;
    Text21: TText;
    ColorAnimation7: TColorAnimation;
    CheckBox2: TCheckBox;
    Rectangle22: TRectangle;
    Edit1: TEdit;
    Rectangle23: TRectangle;
    Edit2: TEdit;
    PasswordEditButton4: TPasswordEditButton;
    Text22: TText;
    Text23: TText;
    Text24: TText;
    Text25: TText;
    Rectangle1: TRectangle;
    Text1: TText;
    ColorAnimation1: TColorAnimation;
    Rectangle2: TRectangle;
    Rectangle3: TRectangle;
    Rectangle4: TRectangle;
    Text2: TText;
    Text3: TText;
    Text4: TText;
    Line1: TLine;
    FloatAnimation1: TFloatAnimation;
    Rectangle7: TRectangle;
    FloatAnimation2: TFloatAnimation;
    Rectangle29: TRectangle;
    Rectangle30: TRectangle;
    Text29: TText;
    ColorAnimation8: TColorAnimation;
    CheckBox1: TCheckBox;
    Rectangle31: TRectangle;
    Edit7: TEdit;
    Rectangle32: TRectangle;
    Edit8: TEdit;
    PasswordEditButton6: TPasswordEditButton;
    Text30: TText;
    Text31: TText;
    Text32: TText;
    text_err_msg: TText;
    btn_go_to_register_form: TRectangle;
    Text5: TText;
    ColorAnimation2: TColorAnimation;
    procedure Rectangle5MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Single);
    procedure Rectangle2MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Single);
    procedure btn_go_to_register_formClick(Sender: TObject);
    procedure btn_go_to_login_formClick(Sender: TObject);
    procedure Rectangle30Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_login: Tfrm_login;

implementation

{$R *.fmx}

uses DM, uMain;

procedure Tfrm_login.btn_go_to_login_formClick(Sender: TObject);
begin
  tabcontrol1.TabIndex := 0;
end;

procedure Tfrm_login.btn_go_to_register_formClick(Sender: TObject);
begin
  tabcontrol1.TabIndex := 1;
end;

procedure Tfrm_login.Rectangle2MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Single);
begin
  if (Button = TMouseButton.mbLeft) then StartWindowDrag;
end;

procedure Tfrm_login.Rectangle30Click(Sender: TObject);

var
  i,j : integer;
  user, pswd :string;
begin


  user := trim(edit7.Text);
  pswd := trim(edit8.Text);

  if (user='') or (pswd='') then begin
    text_err_msg.Visible := true;
    text_err_msg.Text := 'Completer tous les champs';
    text_err_msg.TextSettings.FontColor := TAlphacolorRec.red;
//    text_err_msg.TextSettings.FontColor := $FF008000;
  end else begin

    j:=0;

    frm_DM.FDQuery1.SQL.Clear;
    frm_DM.FDQuery1.SQL.Add('select count(*) from users where [user] = :user and pass = :pswd');
    frm_DM.FDQuery1.ParamByName('user').asstring := user;
    frm_DM.FDQuery1.ParamByName('pswd').asstring := pswd;
    frm_DM.FDQuery1.Open;
    j := frm_DM.FDQuery1.Fields[0].AsInteger;

    if j=1 then begin

        //ShellExecute(0, nil, 'cmd.exe', 'atrrib +h+s +r USER_SESSIONS.txt', nil, SW_HIDE);
        text_err_msg.Visible := false;

        //Send username to main form
        frm_main.USERNAME := user;


        Visible := False; // Makes Form1 invisible
        try
          frm_main.ShowModal; // Shows the Form
        finally
          application.Terminate;
        end;
//        showmessage(user+' '+pswd+' '+inttostr(j));

    end else begin
      text_err_msg.Visible := true;
      text_err_msg.TextSettings.FontColor := TAlphacolorRec.red;
      text_err_msg.Text := 'Invalid User/pass !';
    end;
  end;


end;

procedure Tfrm_login.Rectangle5MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Single);
begin
  if (Button = TMouseButton.mbLeft) then StartWindowDrag;
end;

end.
